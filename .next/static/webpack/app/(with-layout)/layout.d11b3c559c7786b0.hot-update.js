"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/(with-layout)/layout",{

/***/ "(app-pages-browser)/./src/services/trivia/sets.service.ts":
/*!*********************************************!*\
  !*** ./src/services/trivia/sets.service.ts ***!
  \*********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   QuestionSetServices: function() { return /* binding */ QuestionSetServices; }\n/* harmony export */ });\n/* harmony import */ var _interceptor_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../interceptor.base */ \"(app-pages-browser)/./src/services/interceptor.base.ts\");\n\nclass QuestionSetServices extends _interceptor_base__WEBPACK_IMPORTED_MODULE_0__.ApiServices {\n    /**\n   * Create a new question set\n   * POST /v1/questions/create-questionset\n   */ static async createQuestionSet(payload) {\n        try {\n            const response = await this.post(\"/v1/questions/create-questionset\", payload);\n            return response;\n        } catch (err) {\n            var _err_response;\n            return {\n                data: null,\n                err: err.message,\n                response: err === null || err === void 0 ? void 0 : (_err_response = err.response) === null || _err_response === void 0 ? void 0 : _err_response.data\n            };\n        }\n    }\n    /**\n   * Update an existing question set\n   * POST /v1/questions/update-questionset/:id\n   */ static async updateQuestionSet(id, payload) {\n        try {\n            const response = await this.post(\"/v1/questions/update-questionset/\".concat(id), payload);\n            return response;\n        } catch (err) {\n            var _err_response;\n            return {\n                data: null,\n                err: err.message,\n                response: err === null || err === void 0 ? void 0 : (_err_response = err.response) === null || _err_response === void 0 ? void 0 : _err_response.data\n            };\n        }\n    }\n    /**\n   * Delete a question set\n   * POST /v1/questions/delete-questionset/:id\n   */ static async deleteQuestionSet(id) {\n        try {\n            const response = await this.post(\"/v1/questions/delete-questionset/\".concat(id), {});\n            return response;\n        } catch (err) {\n            var _err_response;\n            return {\n                data: null,\n                err: err.message,\n                response: err === null || err === void 0 ? void 0 : (_err_response = err.response) === null || _err_response === void 0 ? void 0 : _err_response.data\n            };\n        }\n    }\n    /**\n   * Get a question set by ID\n   * GET /v1/questions/questionsets/:id\n   */ static async getQuestionSetById(id) {\n        try {\n            const response = await this.get(\"/v1/questions/questionsets/\".concat(id));\n            return response;\n        } catch (err) {\n            var _err_response;\n            return {\n                data: null,\n                err: err.message,\n                response: err === null || err === void 0 ? void 0 : (_err_response = err.response) === null || _err_response === void 0 ? void 0 : _err_response.data\n            };\n        }\n    }\n    /**\n   * Get all question sets with optional filtering\n   * GET /v1/questions/questionsets/\n   */ static async getAllQuestionSets() {\n        let { page = 1, limit = 10, ...filter } = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n        try {\n            const response = await this.get(\"/v1/questions/questionsets/\", {\n                params: {\n                    page: page,\n                    limit: limit,\n                    ...filter.q ? {\n                        q: filter.q\n                    } : {}\n                }\n            });\n            return response;\n        } catch (err) {\n            var _err_response;\n            return {\n                data: null,\n                err: err.message,\n                response: err === null || err === void 0 ? void 0 : (_err_response = err.response) === null || _err_response === void 0 ? void 0 : _err_response.data\n            };\n        }\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9zZXJ2aWNlcy90cml2aWEvc2V0cy5zZXJ2aWNlLnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQ2tEO0FBZ0IzQyxNQUFNQyw0QkFBNEJELDBEQUFXQTtJQUNsRDs7O0dBR0MsR0FDRCxhQUFhRSxrQkFBa0JDLE9BQTJCLEVBQWdCO1FBQ3hFLElBQUk7WUFDRixNQUFNQyxXQUFXLE1BQU0sSUFBSSxDQUFDQyxJQUFJLENBQzdCLG9DQUNERjtZQUVGLE9BQU9DO1FBQ1QsRUFBRSxPQUFPRSxLQUFVO2dCQUlMQTtZQUhaLE9BQU87Z0JBQ0xDLE1BQU07Z0JBQ05ELEtBQUtBLElBQUlFLE9BQU87Z0JBQ2hCSixRQUFRLEVBQUVFLGdCQUFBQSwyQkFBQUEsZ0JBQUFBLElBQUtGLFFBQVEsY0FBYkUsb0NBQUFBLGNBQWVDLElBQUk7WUFDL0I7UUFDRjtJQUNGO0lBRUE7OztHQUdDLEdBQ0QsYUFBYUUsa0JBQ1hDLEVBQW1CLEVBQ25CUCxPQUEyQixFQUNiO1FBQ2QsSUFBSTtZQUNGLE1BQU1DLFdBQVcsTUFBTSxJQUFJLENBQUNDLElBQUksQ0FDOUIsb0NBQXVDLE9BQUhLLEtBQ3BDUDtZQUVGLE9BQU9DO1FBQ1QsRUFBRSxPQUFPRSxLQUFVO2dCQUlMQTtZQUhaLE9BQU87Z0JBQ0xDLE1BQU07Z0JBQ05ELEtBQUtBLElBQUlFLE9BQU87Z0JBQ2hCSixRQUFRLEVBQUVFLGdCQUFBQSwyQkFBQUEsZ0JBQUFBLElBQUtGLFFBQVEsY0FBYkUsb0NBQUFBLGNBQWVDLElBQUk7WUFDL0I7UUFDRjtJQUNGO0lBRUE7OztHQUdDLEdBQ0QsYUFBYUksa0JBQWtCRCxFQUFtQixFQUFnQjtRQUNoRSxJQUFJO1lBQ0YsTUFBTU4sV0FBVyxNQUFNLElBQUksQ0FBQ0MsSUFBSSxDQUM5QixvQ0FBdUMsT0FBSEssS0FDcEMsQ0FBQztZQUVILE9BQU9OO1FBQ1QsRUFBRSxPQUFPRSxLQUFVO2dCQUlMQTtZQUhaLE9BQU87Z0JBQ0xDLE1BQU07Z0JBQ05ELEtBQUtBLElBQUlFLE9BQU87Z0JBQ2hCSixRQUFRLEVBQUVFLGdCQUFBQSwyQkFBQUEsZ0JBQUFBLElBQUtGLFFBQVEsY0FBYkUsb0NBQUFBLGNBQWVDLElBQUk7WUFDL0I7UUFDRjtJQUNGO0lBRUE7OztHQUdDLEdBQ0QsYUFBYUssbUJBQW1CRixFQUFtQixFQUFnQjtRQUNqRSxJQUFJO1lBQ0YsTUFBTU4sV0FBVyxNQUFNLElBQUksQ0FBQ1MsR0FBRyxDQUFJLDhCQUFpQyxPQUFISDtZQUNqRSxPQUFPTjtRQUNULEVBQUUsT0FBT0UsS0FBVTtnQkFJTEE7WUFIWixPQUFPO2dCQUNMQyxNQUFNO2dCQUNORCxLQUFLQSxJQUFJRSxPQUFPO2dCQUNoQkosUUFBUSxFQUFFRSxnQkFBQUEsMkJBQUFBLGdCQUFBQSxJQUFLRixRQUFRLGNBQWJFLG9DQUFBQSxjQUFlQyxJQUFJO1lBQy9CO1FBQ0Y7SUFDRjtJQUVBOzs7R0FHQyxHQUNELGFBQWFPLHFCQUk0QjtZQUpULEVBQzlCQyxPQUFPLENBQUMsRUFDUkMsUUFBUSxFQUFFLEVBQ1YsR0FBR0MsUUFDZSxHQUpZLGlFQUlULENBQUM7UUFDdEIsSUFBSTtZQUNGLE1BQU1iLFdBQVcsTUFBTSxJQUFJLENBQUNTLEdBQUcsQ0FBSywrQkFBOEI7Z0JBQ2hFSyxRQUFRO29CQUNOSCxNQUFNQTtvQkFDTkMsT0FBT0E7b0JBQ1AsR0FBSUMsT0FBT0UsQ0FBQyxHQUFHO3dCQUFFQSxHQUFHRixPQUFPRSxDQUFDO29CQUFDLElBQUksQ0FBQyxDQUFDO2dCQUNyQztZQUNGO1lBQ0EsT0FBT2Y7UUFDVCxFQUFFLE9BQU9FLEtBQVU7Z0JBSUxBO1lBSFosT0FBTztnQkFDTEMsTUFBTTtnQkFDTkQsS0FBS0EsSUFBSUUsT0FBTztnQkFDaEJKLFFBQVEsRUFBRUUsZ0JBQUFBLDJCQUFBQSxnQkFBQUEsSUFBS0YsUUFBUSxjQUFiRSxvQ0FBQUEsY0FBZUMsSUFBSTtZQUMvQjtRQUNGO0lBQ0Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvc2VydmljZXMvdHJpdmlhL3NldHMuc2VydmljZS50cz9mMDc0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEF4aW9zUmVzcG9uc2UgfSBmcm9tIFwiYXhpb3NcIjtcbmltcG9ydCB7IEFwaVNlcnZpY2VzIH0gZnJvbSBcIi4uL2ludGVyY2VwdG9yLmJhc2VcIjtcblxuaW50ZXJmYWNlIFF1ZXN0aW9uU2V0UGF5bG9hZCB7XG4gIGNhdGVnb3J5SWQ6IG51bWJlcjtcbiAgbmFtZTogc3RyaW5nO1xuICBkZXNjcmlwdGlvbjogc3RyaW5nO1xufVxuXG5pbnRlcmZhY2UgUXVlc3Rpb25TZXRGaWx0ZXIge1xuICBxPzogc3RyaW5nO1xuICBwYWdlPzogbnVtYmVyO1xuICBsaW1pdD86IG51bWJlcjtcbn1cblxuaW50ZXJmYWNlIFQgZXh0ZW5kcyBBeGlvc1Jlc3BvbnNlPGFueSwgYW55PiB7fVxuXG5leHBvcnQgY2xhc3MgUXVlc3Rpb25TZXRTZXJ2aWNlcyBleHRlbmRzIEFwaVNlcnZpY2VzIHtcbiAgLyoqXG4gICAqIENyZWF0ZSBhIG5ldyBxdWVzdGlvbiBzZXRcbiAgICogUE9TVCAvdjEvcXVlc3Rpb25zL2NyZWF0ZS1xdWVzdGlvbnNldFxuICAgKi9cbiAgc3RhdGljIGFzeW5jIGNyZWF0ZVF1ZXN0aW9uU2V0KHBheWxvYWQ6IFF1ZXN0aW9uU2V0UGF5bG9hZCk6IFByb21pc2U8YW55PiB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgdGhpcy5wb3N0PFQ+KFxuICAgICAgICBgL3YxL3F1ZXN0aW9ucy9jcmVhdGUtcXVlc3Rpb25zZXRgLFxuICAgICAgICBwYXlsb2FkLFxuICAgICAgKTtcbiAgICAgIHJldHVybiByZXNwb25zZTtcbiAgICB9IGNhdGNoIChlcnI6IGFueSkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgZGF0YTogbnVsbCxcbiAgICAgICAgZXJyOiBlcnIubWVzc2FnZSxcbiAgICAgICAgcmVzcG9uc2U6IGVycj8ucmVzcG9uc2U/LmRhdGEsXG4gICAgICB9O1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBVcGRhdGUgYW4gZXhpc3RpbmcgcXVlc3Rpb24gc2V0XG4gICAqIFBPU1QgL3YxL3F1ZXN0aW9ucy91cGRhdGUtcXVlc3Rpb25zZXQvOmlkXG4gICAqL1xuICBzdGF0aWMgYXN5bmMgdXBkYXRlUXVlc3Rpb25TZXQoXG4gICAgaWQ6IHN0cmluZyB8IG51bWJlcixcbiAgICBwYXlsb2FkOiBRdWVzdGlvblNldFBheWxvYWQsXG4gICk6IFByb21pc2U8YW55PiB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgdGhpcy5wb3N0PFQ+KFxuICAgICAgICBgL3YxL3F1ZXN0aW9ucy91cGRhdGUtcXVlc3Rpb25zZXQvJHtpZH1gLFxuICAgICAgICBwYXlsb2FkLFxuICAgICAgKTtcbiAgICAgIHJldHVybiByZXNwb25zZTtcbiAgICB9IGNhdGNoIChlcnI6IGFueSkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgZGF0YTogbnVsbCxcbiAgICAgICAgZXJyOiBlcnIubWVzc2FnZSxcbiAgICAgICAgcmVzcG9uc2U6IGVycj8ucmVzcG9uc2U/LmRhdGEsXG4gICAgICB9O1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBEZWxldGUgYSBxdWVzdGlvbiBzZXRcbiAgICogUE9TVCAvdjEvcXVlc3Rpb25zL2RlbGV0ZS1xdWVzdGlvbnNldC86aWRcbiAgICovXG4gIHN0YXRpYyBhc3luYyBkZWxldGVRdWVzdGlvblNldChpZDogc3RyaW5nIHwgbnVtYmVyKTogUHJvbWlzZTxhbnk+IHtcbiAgICB0cnkge1xuICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCB0aGlzLnBvc3Q8VD4oXG4gICAgICAgIGAvdjEvcXVlc3Rpb25zL2RlbGV0ZS1xdWVzdGlvbnNldC8ke2lkfWAsXG4gICAgICAgIHt9LFxuICAgICAgKTtcbiAgICAgIHJldHVybiByZXNwb25zZTtcbiAgICB9IGNhdGNoIChlcnI6IGFueSkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgZGF0YTogbnVsbCxcbiAgICAgICAgZXJyOiBlcnIubWVzc2FnZSxcbiAgICAgICAgcmVzcG9uc2U6IGVycj8ucmVzcG9uc2U/LmRhdGEsXG4gICAgICB9O1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBHZXQgYSBxdWVzdGlvbiBzZXQgYnkgSURcbiAgICogR0VUIC92MS9xdWVzdGlvbnMvcXVlc3Rpb25zZXRzLzppZFxuICAgKi9cbiAgc3RhdGljIGFzeW5jIGdldFF1ZXN0aW9uU2V0QnlJZChpZDogc3RyaW5nIHwgbnVtYmVyKTogUHJvbWlzZTxhbnk+IHtcbiAgICB0cnkge1xuICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCB0aGlzLmdldDxUPihgL3YxL3F1ZXN0aW9ucy9xdWVzdGlvbnNldHMvJHtpZH1gKTtcbiAgICAgIHJldHVybiByZXNwb25zZTtcbiAgICB9IGNhdGNoIChlcnI6IGFueSkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgZGF0YTogbnVsbCxcbiAgICAgICAgZXJyOiBlcnIubWVzc2FnZSxcbiAgICAgICAgcmVzcG9uc2U6IGVycj8ucmVzcG9uc2U/LmRhdGEsXG4gICAgICB9O1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBHZXQgYWxsIHF1ZXN0aW9uIHNldHMgd2l0aCBvcHRpb25hbCBmaWx0ZXJpbmdcbiAgICogR0VUIC92MS9xdWVzdGlvbnMvcXVlc3Rpb25zZXRzL1xuICAgKi9cbiAgc3RhdGljIGFzeW5jIGdldEFsbFF1ZXN0aW9uU2V0cyh7XG4gICAgcGFnZSA9IDEsXG4gICAgbGltaXQgPSAxMCxcbiAgICAuLi5maWx0ZXJcbiAgfTogUXVlc3Rpb25TZXRGaWx0ZXIgPSB7fSk6IFByb21pc2U8YW55PiB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgdGhpcy5nZXQ8VD4oYC92MS9xdWVzdGlvbnMvcXVlc3Rpb25zZXRzL2AsIHtcbiAgICAgICAgcGFyYW1zOiB7XG4gICAgICAgICAgcGFnZTogcGFnZSxcbiAgICAgICAgICBsaW1pdDogbGltaXQsXG4gICAgICAgICAgLi4uKGZpbHRlci5xID8geyBxOiBmaWx0ZXIucSB9IDoge30pLFxuICAgICAgICB9LFxuICAgICAgfSk7XG4gICAgICByZXR1cm4gcmVzcG9uc2U7XG4gICAgfSBjYXRjaCAoZXJyOiBhbnkpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGRhdGE6IG51bGwsXG4gICAgICAgIGVycjogZXJyLm1lc3NhZ2UsXG4gICAgICAgIHJlc3BvbnNlOiBlcnI/LnJlc3BvbnNlPy5kYXRhLFxuICAgICAgfTtcbiAgICB9XG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJBcGlTZXJ2aWNlcyIsIlF1ZXN0aW9uU2V0U2VydmljZXMiLCJjcmVhdGVRdWVzdGlvblNldCIsInBheWxvYWQiLCJyZXNwb25zZSIsInBvc3QiLCJlcnIiLCJkYXRhIiwibWVzc2FnZSIsInVwZGF0ZVF1ZXN0aW9uU2V0IiwiaWQiLCJkZWxldGVRdWVzdGlvblNldCIsImdldFF1ZXN0aW9uU2V0QnlJZCIsImdldCIsImdldEFsbFF1ZXN0aW9uU2V0cyIsInBhZ2UiLCJsaW1pdCIsImZpbHRlciIsInBhcmFtcyIsInEiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/services/trivia/sets.service.ts\n"));

/***/ })

});